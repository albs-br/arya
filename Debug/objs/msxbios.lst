                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module msxbios
                                      6 	.optsdcc -mz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _getchar
                                     12 	.globl _putchar
                                     13 	.globl _LOAD_REGS
                                     14 	.globl _REGS
                                     15 	.globl _GETPNT
                                     16 	.globl _PUTPNT
                                     17 	.globl _REPCNT
                                     18 	.globl _SCNCNT
                                     19 	.globl _ATRBYT
                                     20 	.globl _CMASK
                                     21 	.globl _CLOC
                                     22 	.globl _BDRCLR
                                     23 	.globl _BAKCLR
                                     24 	.globl _FORCLR
                                     25 	.globl _TRGFLG
                                     26 	.globl _STATFL
                                     27 	.globl _MSX_vdp_regs
                                     28 	.globl _CNSDFG
                                     29 	.globl _CSRX
                                     30 	.globl _CSRY
                                     31 	.globl _MSX_modedata_screen3
                                     32 	.globl _MSX_modedata_screen2
                                     33 	.globl _MSX_modedata_screen1
                                     34 	.globl _MSX_modedata_screen0
                                     35 	.globl _CLIKSW
                                     36 	.globl _JIFFY
                                     37 	.globl _CLMLST
                                     38 	.globl _CRTCNT
                                     39 	.globl _LINLEN
                                     40 	.globl _LINL32
                                     41 	.globl _LINL40
                                     42 	.globl _MSX_charset
                                     43 	.globl _MSX_version
                                     44 	.globl _MSX_vdp_port_write
                                     45 	.globl _MSX_vdp_port_read
                                     46 	.globl _RDSLT
                                     47 	.globl _WRSLT
                                     48 	.globl _DISSCR
                                     49 	.globl _ENASCR
                                     50 	.globl _WRTVDP
                                     51 	.globl _RDVRM
                                     52 	.globl _WRTVRM
                                     53 	.globl _SETRD
                                     54 	.globl _SETWRT
                                     55 	.globl _FILVRM
                                     56 	.globl _LDIRMV
                                     57 	.globl _LDIRVM
                                     58 	.globl _CHGMOD
                                     59 	.globl _CHGCLR
                                     60 	.globl _CLRSPR
                                     61 	.globl _INITXT
                                     62 	.globl _INIT32
                                     63 	.globl _INIGRP
                                     64 	.globl _INIMLT
                                     65 	.globl _CALPAT
                                     66 	.globl _CALATR
                                     67 	.globl _GSPSIZ
                                     68 	.globl _GRPPRT
                                     69 	.globl _GICINI
                                     70 	.globl _WRTPSG
                                     71 	.globl _CHSNS
                                     72 	.globl _CHGET
                                     73 	.globl _CHPUT
                                     74 	.globl _LPTOUT
                                     75 	.globl _BEEP
                                     76 	.globl _CLS
                                     77 	.globl _POSIT
                                     78 	.globl _TOTEXT
                                     79 	.globl _GTSTCK
                                     80 	.globl _GTTRIG
                                     81 	.globl _GTPAD
                                     82 	.globl _GTPDL
                                     83 	.globl _MAPXY
                                     84 	.globl _FETCHC_ADDR
                                     85 	.globl _RDVDP
                                     86 	.globl _SNSMAT
                                     87 	.globl _KILBUF
                                     88 ;--------------------------------------------------------
                                     89 ; special function registers
                                     90 ;--------------------------------------------------------
                                     91 ;--------------------------------------------------------
                                     92 ; ram data
                                     93 ;--------------------------------------------------------
                                     94 	.area _DATA
                           000004    95 _MSX_charset	=	0x0004
                           00F3AE    96 _LINL40	=	0xf3ae
                           00F3AF    97 _LINL32	=	0xf3af
                           00F3B0    98 _LINLEN	=	0xf3b0
                           00F3B1    99 _CRTCNT	=	0xf3b1
                           00F3B1   100 _CLMLST	=	0xf3b1
                           00FC9E   101 _JIFFY	=	0xfc9e
                           00F3DB   102 _CLIKSW	=	0xf3db
                           00F3B3   103 _MSX_modedata_screen0	=	0xf3b3
                           00F3BD   104 _MSX_modedata_screen1	=	0xf3bd
                           00F3C7   105 _MSX_modedata_screen2	=	0xf3c7
                           00F3D1   106 _MSX_modedata_screen3	=	0xf3d1
                           00F3DC   107 _CSRY	=	0xf3dc
                           00F3DD   108 _CSRX	=	0xf3dd
                           00F3DE   109 _CNSDFG	=	0xf3de
                           00F3DF   110 _MSX_vdp_regs	=	0xf3df
                           00F3E7   111 _STATFL	=	0xf3e7
                           00F3E8   112 _TRGFLG	=	0xf3e8
                           00F3E9   113 _FORCLR	=	0xf3e9
                           00F3EA   114 _BAKCLR	=	0xf3ea
                           00F3EB   115 _BDRCLR	=	0xf3eb
                           00F92A   116 _CLOC	=	0xf92a
                           00F92C   117 _CMASK	=	0xf92c
                           00F3F2   118 _ATRBYT	=	0xf3f2
                           00F3F6   119 _SCNCNT	=	0xf3f6
                           00F3F7   120 _REPCNT	=	0xf3f7
                           00F3F8   121 _PUTPNT	=	0xf3f8
                           00F3FA   122 _GETPNT	=	0xf3fa
      000000                        123 _REGS::
      000000                        124 	.ds 12
                                    125 ;--------------------------------------------------------
                                    126 ; ram data
                                    127 ;--------------------------------------------------------
                                    128 	.area _INITIALIZED
                                    129 ;--------------------------------------------------------
                                    130 ; absolute external ram data
                                    131 ;--------------------------------------------------------
                                    132 	.area _DABS (ABS)
                                    133 ;--------------------------------------------------------
                                    134 ; global & static initialisations
                                    135 ;--------------------------------------------------------
                                    136 	.area _HOME
                                    137 	.area _GSINIT
                                    138 	.area _GSFINAL
                                    139 	.area _GSINIT
                                    140 ;--------------------------------------------------------
                                    141 ; Home
                                    142 ;--------------------------------------------------------
                                    143 	.area _HOME
                                    144 	.area _HOME
                                    145 ;--------------------------------------------------------
                                    146 ; code
                                    147 ;--------------------------------------------------------
                                    148 	.area _CODE
                                    149 ;src\msxbios.c:32: void LOAD_REGS() {
                                    150 ;	---------------------------------
                                    151 ; Function LOAD_REGS
                                    152 ; ---------------------------------
      000000                        153 _LOAD_REGS::
                                    154 ;src\msxbios.c:33: __asm__("ld de,(_REGS+4)");
      000000 ED 5Br04r00      [20]  155 	ld	de,(_REGS+4)
                                    156 ;src\msxbios.c:34: __asm__("ld bc,(_REGS+6)");
      000004 ED 4Br06r00      [20]  157 	ld	bc,(_REGS+6)
                                    158 ;src\msxbios.c:35: __asm__("ld a,(_REGS+9)");
      000008 3Ar09r00         [13]  159 	ld	a,(_REGS+9)
                                    160 ;src\msxbios.c:36: __asm__("ld hl,(_REGS+10)");
      00000B 2Ar0Ar00         [16]  161 	ld	hl,(_REGS+10)
                                    162 ;src\msxbios.c:38: }
      00000E C9               [10]  163 	ret
                           000006   164 _MSX_vdp_port_read	=	0x0006
                           000007   165 _MSX_vdp_port_write	=	0x0007
                           00002D   166 _MSX_version	=	0x002d
                                    167 ;src\msxbios.c:44: void RDSLT(uint8_t slot, uint16_t addr) {
                                    168 ;	---------------------------------
                                    169 ; Function RDSLT
                                    170 ; ---------------------------------
      00000F                        171 _RDSLT::
                                    172 ;src\msxbios.c:45: REGS.b.a = slot;
      00000F 21r09r00         [10]  173 	ld	hl, #(_REGS + 0x0009)
      000012 FD 21 02 00      [14]  174 	ld	iy, #2
      000016 FD 39            [15]  175 	add	iy, sp
      000018 FD 7E 00         [19]  176 	ld	a, 0 (iy)
      00001B 77               [ 7]  177 	ld	(hl), a
                                    178 ;src\msxbios.c:46: REGS.w.hl = addr;
      00001C 21r0Ar00         [10]  179 	ld	hl, #(_REGS + 0x000a)
      00001F FD 7E 01         [19]  180 	ld	a, 1 (iy)
      000022 FD 23            [10]  181 	inc	iy
      000024 77               [ 7]  182 	ld	(hl), a
      000025 23               [ 6]  183 	inc	hl
      000026 FD 7E 01         [19]  184 	ld	a, 1 (iy)
      000029 77               [ 7]  185 	ld	(hl), a
                                    186 ;src\msxbios.c:47: MSXUSR_LOAD_REGS(0x000c);
      00002A CDr00r00         [17]  187 	call	_LOAD_REGS
      00002D CD 0C 00         [17]  188 	call	0x000c
                                    189 ;src\msxbios.c:48: }
      000030 C9               [10]  190 	ret
                                    191 ;src\msxbios.c:50: void WRSLT(uint8_t slot, uint16_t addr, uint8_t value) {
                                    192 ;	---------------------------------
                                    193 ; Function WRSLT
                                    194 ; ---------------------------------
      000031                        195 _WRSLT::
                                    196 ;src\msxbios.c:51: REGS.b.a = slot;
      000031 21r09r00         [10]  197 	ld	hl, #(_REGS + 0x0009)
      000034 FD 21 02 00      [14]  198 	ld	iy, #2
      000038 FD 39            [15]  199 	add	iy, sp
      00003A FD 7E 00         [19]  200 	ld	a, 0 (iy)
      00003D 77               [ 7]  201 	ld	(hl), a
                                    202 ;src\msxbios.c:52: REGS.w.hl = addr;
      00003E 21r0Ar00         [10]  203 	ld	hl, #(_REGS + 0x000a)
      000041 FD 7E 01         [19]  204 	ld	a, 1 (iy)
      000044 FD 23            [10]  205 	inc	iy
      000046 77               [ 7]  206 	ld	(hl), a
      000047 23               [ 6]  207 	inc	hl
      000048 FD 7E 01         [19]  208 	ld	a, 1 (iy)
      00004B 77               [ 7]  209 	ld	(hl), a
                                    210 ;src\msxbios.c:53: REGS.b.e = value;
      00004C 21r04r00         [10]  211 	ld	hl, #(_REGS + 0x0004)
      00004F FD 7E 02         [19]  212 	ld	a, 2 (iy)
      000052 77               [ 7]  213 	ld	(hl), a
                                    214 ;src\msxbios.c:54: MSXUSR_LOAD_REGS(0x0014);
      000053 CDr00r00         [17]  215 	call	_LOAD_REGS
      000056 CD 14 00         [17]  216 	call	0x0014
                                    217 ;src\msxbios.c:55: }
      000059 C9               [10]  218 	ret
                                    219 ;src\msxbios.c:57: void DISSCR() __z88dk_fastcall {
                                    220 ;	---------------------------------
                                    221 ; Function DISSCR
                                    222 ; ---------------------------------
      00005A                        223 _DISSCR::
                                    224 ;src\msxbios.c:58: MSXUSR(0x0041);
      00005A CD 41 00         [17]  225 	call	0x0041
                                    226 ;src\msxbios.c:59: }
      00005D C9               [10]  227 	ret
                                    228 ;src\msxbios.c:61: void ENASCR() __z88dk_fastcall {
                                    229 ;	---------------------------------
                                    230 ; Function ENASCR
                                    231 ; ---------------------------------
      00005E                        232 _ENASCR::
                                    233 ;src\msxbios.c:62: MSXUSR(0x0044);
      00005E CD 44 00         [17]  234 	call	0x0044
                                    235 ;src\msxbios.c:63: }
      000061 C9               [10]  236 	ret
                                    237 ;src\msxbios.c:65: void WRTVDP(uint16_t reg_data) __z88dk_fastcall {
                                    238 ;	---------------------------------
                                    239 ; Function WRTVDP
                                    240 ; ---------------------------------
      000062                        241 _WRTVDP::
                                    242 ;src\msxbios.c:67: __asm__("ld b,l");
      000062 45               [ 4]  243 	ld	b,l
                                    244 ;src\msxbios.c:68: __asm__("ld c,h");
      000063 4C               [ 4]  245 	ld	c,h
                                    246 ;src\msxbios.c:69: MSXUSR(0x0047);
      000064 CD 47 00         [17]  247 	call	0x0047
                                    248 ;src\msxbios.c:70: }
      000067 C9               [10]  249 	ret
                                    250 ;src\msxbios.c:72: uint8_t RDVRM(uint16_t addr) __z88dk_fastcall {
                                    251 ;	---------------------------------
                                    252 ; Function RDVRM
                                    253 ; ---------------------------------
      000068                        254 _RDVRM::
                                    255 ;src\msxbios.c:74: MSXUSR(0x004a);
      000068 CD 4A 00         [17]  256 	call	0x004a
                                    257 ;src\msxbios.c:75: MSXUSR_RTN_A();
      00006B 6F               [ 4]  258 	ld	l,a
                                    259 ;src\msxbios.c:76: }
      00006C C9               [10]  260 	ret
                                    261 ;src\msxbios.c:78: void WRTVRM(uint16_t addr, uint8_t data) {
                                    262 ;	---------------------------------
                                    263 ; Function WRTVRM
                                    264 ; ---------------------------------
      00006D                        265 _WRTVRM::
                                    266 ;src\msxbios.c:79: REGS.w.hl = addr;
      00006D 21r0Ar00         [10]  267 	ld	hl, #(_REGS + 0x000a)
      000070 FD 21 02 00      [14]  268 	ld	iy, #2
      000074 FD 39            [15]  269 	add	iy, sp
      000076 FD 7E 00         [19]  270 	ld	a, 0 (iy)
      000079 77               [ 7]  271 	ld	(hl), a
      00007A 23               [ 6]  272 	inc	hl
      00007B FD 7E 01         [19]  273 	ld	a, 1 (iy)
      00007E 77               [ 7]  274 	ld	(hl), a
                                    275 ;src\msxbios.c:80: REGS.b.a = data;
      00007F 21r09r00         [10]  276 	ld	hl, #(_REGS + 0x0009)
      000082 FD 7E 02         [19]  277 	ld	a, 2 (iy)
      000085 77               [ 7]  278 	ld	(hl), a
                                    279 ;src\msxbios.c:81: MSXUSR_LOAD_REGS(0x004d);
      000086 CDr00r00         [17]  280 	call	_LOAD_REGS
      000089 CD 4D 00         [17]  281 	call	0x004d
                                    282 ;src\msxbios.c:82: }
      00008C C9               [10]  283 	ret
                                    284 ;src\msxbios.c:84: void SETRD() {
                                    285 ;	---------------------------------
                                    286 ; Function SETRD
                                    287 ; ---------------------------------
      00008D                        288 _SETRD::
                                    289 ;src\msxbios.c:85: MSXUSR(0x0050);
      00008D CD 50 00         [17]  290 	call	0x0050
                                    291 ;src\msxbios.c:86: }
      000090 C9               [10]  292 	ret
                                    293 ;src\msxbios.c:88: void SETWRT() {
                                    294 ;	---------------------------------
                                    295 ; Function SETWRT
                                    296 ; ---------------------------------
      000091                        297 _SETWRT::
                                    298 ;src\msxbios.c:89: MSXUSR(0x0053);
      000091 CD 53 00         [17]  299 	call	0x0053
                                    300 ;src\msxbios.c:90: }
      000094 C9               [10]  301 	ret
                                    302 ;src\msxbios.c:92: void FILVRM(uint16_t start, uint16_t len, uint8_t data) {
                                    303 ;	---------------------------------
                                    304 ; Function FILVRM
                                    305 ; ---------------------------------
      000095                        306 _FILVRM::
                                    307 ;src\msxbios.c:93: REGS.w.hl = start;
      000095 21r0Ar00         [10]  308 	ld	hl, #(_REGS + 0x000a)
      000098 FD 21 02 00      [14]  309 	ld	iy, #2
      00009C FD 39            [15]  310 	add	iy, sp
      00009E FD 7E 00         [19]  311 	ld	a, 0 (iy)
      0000A1 77               [ 7]  312 	ld	(hl), a
      0000A2 23               [ 6]  313 	inc	hl
      0000A3 FD 7E 01         [19]  314 	ld	a, 1 (iy)
      0000A6 77               [ 7]  315 	ld	(hl), a
                                    316 ;src\msxbios.c:94: REGS.w.bc = len;
      0000A7 21r06r00         [10]  317 	ld	hl, #(_REGS + 0x0006)
      0000AA FD 7E 02         [19]  318 	ld	a, 2 (iy)
      0000AD FD 23            [10]  319 	inc	iy
      0000AF FD 23            [10]  320 	inc	iy
      0000B1 77               [ 7]  321 	ld	(hl), a
      0000B2 23               [ 6]  322 	inc	hl
      0000B3 FD 7E 01         [19]  323 	ld	a, 1 (iy)
      0000B6 77               [ 7]  324 	ld	(hl), a
                                    325 ;src\msxbios.c:95: REGS.b.a = data;
      0000B7 21r09r00         [10]  326 	ld	hl, #(_REGS + 0x0009)
      0000BA FD 7E 02         [19]  327 	ld	a, 2 (iy)
      0000BD 77               [ 7]  328 	ld	(hl), a
                                    329 ;src\msxbios.c:96: MSXUSR_LOAD_REGS(0x0056);
      0000BE CDr00r00         [17]  330 	call	_LOAD_REGS
      0000C1 CD 56 00         [17]  331 	call	0x0056
                                    332 ;src\msxbios.c:97: }
      0000C4 C9               [10]  333 	ret
                                    334 ;src\msxbios.c:99: void LDIRMV(uint8_t* mdest, uint16_t vsrc, uint16_t count) {
                                    335 ;	---------------------------------
                                    336 ; Function LDIRMV
                                    337 ; ---------------------------------
      0000C5                        338 _LDIRMV::
      0000C5 DD E5            [15]  339 	push	ix
      0000C7 DD 21 00 00      [14]  340 	ld	ix,#0
      0000CB DD 39            [15]  341 	add	ix,sp
                                    342 ;src\msxbios.c:100: REGS.w.de = (uint16_t)mdest;
      0000CD DD 4E 04         [19]  343 	ld	c, 4 (ix)
      0000D0 DD 46 05         [19]  344 	ld	b, 5 (ix)
      0000D3 ED 43r04r00      [20]  345 	ld	((_REGS + 0x0004)), bc
                                    346 ;src\msxbios.c:101: REGS.w.hl = vsrc;
      0000D7 21r0Ar00         [10]  347 	ld	hl, #(_REGS + 0x000a)
      0000DA DD 7E 06         [19]  348 	ld	a, 6 (ix)
      0000DD 77               [ 7]  349 	ld	(hl), a
      0000DE 23               [ 6]  350 	inc	hl
      0000DF DD 7E 07         [19]  351 	ld	a, 7 (ix)
      0000E2 77               [ 7]  352 	ld	(hl), a
                                    353 ;src\msxbios.c:102: REGS.w.bc = count;
      0000E3 21r06r00         [10]  354 	ld	hl, #(_REGS + 0x0006)
      0000E6 DD 7E 08         [19]  355 	ld	a, 8 (ix)
      0000E9 77               [ 7]  356 	ld	(hl), a
      0000EA 23               [ 6]  357 	inc	hl
      0000EB DD 7E 09         [19]  358 	ld	a, 9 (ix)
      0000EE 77               [ 7]  359 	ld	(hl), a
                                    360 ;src\msxbios.c:103: MSXUSR_LOAD_REGS(0x0059);
      0000EF CDr00r00         [17]  361 	call	_LOAD_REGS
      0000F2 CD 59 00         [17]  362 	call	0x0059
                                    363 ;src\msxbios.c:104: }
      0000F5 DD E1            [14]  364 	pop	ix
      0000F7 C9               [10]  365 	ret
                                    366 ;src\msxbios.c:106: void LDIRVM(uint16_t vdest, const uint8_t* msrc, uint16_t count) {
                                    367 ;	---------------------------------
                                    368 ; Function LDIRVM
                                    369 ; ---------------------------------
      0000F8                        370 _LDIRVM::
      0000F8 DD E5            [15]  371 	push	ix
      0000FA DD 21 00 00      [14]  372 	ld	ix,#0
      0000FE DD 39            [15]  373 	add	ix,sp
                                    374 ;src\msxbios.c:107: REGS.w.de = vdest;
      000100 21r04r00         [10]  375 	ld	hl, #(_REGS + 0x0004)
      000103 DD 7E 04         [19]  376 	ld	a, 4 (ix)
      000106 77               [ 7]  377 	ld	(hl), a
      000107 23               [ 6]  378 	inc	hl
      000108 DD 7E 05         [19]  379 	ld	a, 5 (ix)
      00010B 77               [ 7]  380 	ld	(hl), a
                                    381 ;src\msxbios.c:108: REGS.w.hl = (uint16_t)msrc;
      00010C DD 4E 06         [19]  382 	ld	c, 6 (ix)
      00010F DD 46 07         [19]  383 	ld	b, 7 (ix)
      000112 ED 43r0Ar00      [20]  384 	ld	((_REGS + 0x000a)), bc
                                    385 ;src\msxbios.c:109: REGS.w.bc = count;
      000116 21r06r00         [10]  386 	ld	hl, #(_REGS + 0x0006)
      000119 DD 7E 08         [19]  387 	ld	a, 8 (ix)
      00011C 77               [ 7]  388 	ld	(hl), a
      00011D 23               [ 6]  389 	inc	hl
      00011E DD 7E 09         [19]  390 	ld	a, 9 (ix)
      000121 77               [ 7]  391 	ld	(hl), a
                                    392 ;src\msxbios.c:110: MSXUSR_LOAD_REGS(0x005c);
      000122 CDr00r00         [17]  393 	call	_LOAD_REGS
      000125 CD 5C 00         [17]  394 	call	0x005c
                                    395 ;src\msxbios.c:111: }
      000128 DD E1            [14]  396 	pop	ix
      00012A C9               [10]  397 	ret
                                    398 ;src\msxbios.c:113: void CHGMOD(uint8_t mode) __z88dk_fastcall {
                                    399 ;	---------------------------------
                                    400 ; Function CHGMOD
                                    401 ; ---------------------------------
      00012B                        402 _CHGMOD::
                                    403 ;src\msxbios.c:115: MSXUSR_LOAD_A();
      00012B 7D               [ 4]  404 	ld	a,l
                                    405 ;src\msxbios.c:116: MSXUSR(0x005f);
      00012C CD 5F 00         [17]  406 	call	0x005f
                                    407 ;src\msxbios.c:117: }
      00012F C9               [10]  408 	ret
                                    409 ;src\msxbios.c:119: void CHGCLR() __z88dk_fastcall {
                                    410 ;	---------------------------------
                                    411 ; Function CHGCLR
                                    412 ; ---------------------------------
      000130                        413 _CHGCLR::
                                    414 ;src\msxbios.c:121: MSXUSR(0x0062);
      000130 CD 62 00         [17]  415 	call	0x0062
                                    416 ;src\msxbios.c:122: }
      000133 C9               [10]  417 	ret
                                    418 ;src\msxbios.c:124: void CLRSPR() __z88dk_fastcall {
                                    419 ;	---------------------------------
                                    420 ; Function CLRSPR
                                    421 ; ---------------------------------
      000134                        422 _CLRSPR::
                                    423 ;src\msxbios.c:125: MSXUSR(0x0069);
      000134 CD 69 00         [17]  424 	call	0x0069
                                    425 ;src\msxbios.c:126: }
      000137 C9               [10]  426 	ret
                                    427 ;src\msxbios.c:128: void INITXT() __z88dk_fastcall {
                                    428 ;	---------------------------------
                                    429 ; Function INITXT
                                    430 ; ---------------------------------
      000138                        431 _INITXT::
                                    432 ;src\msxbios.c:129: MSXUSR(0x006c);
      000138 CD 6C 00         [17]  433 	call	0x006c
                                    434 ;src\msxbios.c:130: }
      00013B C9               [10]  435 	ret
                                    436 ;src\msxbios.c:132: void INIT32() __z88dk_fastcall {
                                    437 ;	---------------------------------
                                    438 ; Function INIT32
                                    439 ; ---------------------------------
      00013C                        440 _INIT32::
                                    441 ;src\msxbios.c:133: MSXUSR(0x006f);
      00013C CD 6F 00         [17]  442 	call	0x006f
                                    443 ;src\msxbios.c:134: }
      00013F C9               [10]  444 	ret
                                    445 ;src\msxbios.c:136: void INIGRP() __z88dk_fastcall {
                                    446 ;	---------------------------------
                                    447 ; Function INIGRP
                                    448 ; ---------------------------------
      000140                        449 _INIGRP::
                                    450 ;src\msxbios.c:137: MSXUSR(0x0072);
      000140 CD 72 00         [17]  451 	call	0x0072
                                    452 ;src\msxbios.c:138: }
      000143 C9               [10]  453 	ret
                                    454 ;src\msxbios.c:140: void INIMLT() __z88dk_fastcall {
                                    455 ;	---------------------------------
                                    456 ; Function INIMLT
                                    457 ; ---------------------------------
      000144                        458 _INIMLT::
                                    459 ;src\msxbios.c:141: MSXUSR(0x0075);
      000144 CD 75 00         [17]  460 	call	0x0075
                                    461 ;src\msxbios.c:142: }
      000147 C9               [10]  462 	ret
                                    463 ;src\msxbios.c:144: uint16_t CALPAT() __z88dk_fastcall {
                                    464 ;	---------------------------------
                                    465 ; Function CALPAT
                                    466 ; ---------------------------------
      000148                        467 _CALPAT::
                                    468 ;src\msxbios.c:145: MSXUSR(0x0084);
      000148 CD 84 00         [17]  469 	call	0x0084
                                    470 ;src\msxbios.c:146: MSXUSR_RTN_A();
      00014B 6F               [ 4]  471 	ld	l,a
                                    472 ;src\msxbios.c:147: }
      00014C C9               [10]  473 	ret
                                    474 ;src\msxbios.c:149: uint16_t CALATR() __z88dk_fastcall {
                                    475 ;	---------------------------------
                                    476 ; Function CALATR
                                    477 ; ---------------------------------
      00014D                        478 _CALATR::
                                    479 ;src\msxbios.c:150: MSXUSR(0x0087);
      00014D CD 87 00         [17]  480 	call	0x0087
                                    481 ;src\msxbios.c:151: MSXUSR_RTN_A();
      000150 6F               [ 4]  482 	ld	l,a
                                    483 ;src\msxbios.c:152: }
      000151 C9               [10]  484 	ret
                                    485 ;src\msxbios.c:154: uint16_t GSPSIZ() __z88dk_fastcall {
                                    486 ;	---------------------------------
                                    487 ; Function GSPSIZ
                                    488 ; ---------------------------------
      000152                        489 _GSPSIZ::
                                    490 ;src\msxbios.c:155: MSXUSR(0x008a);
      000152 CD 8A 00         [17]  491 	call	0x008a
                                    492 ;src\msxbios.c:156: MSXUSR_RTN_A();
      000155 6F               [ 4]  493 	ld	l,a
                                    494 ;src\msxbios.c:157: }
      000156 C9               [10]  495 	ret
                                    496 ;src\msxbios.c:159: uint16_t GRPPRT(char ch) __z88dk_fastcall {
                                    497 ;	---------------------------------
                                    498 ; Function GRPPRT
                                    499 ; ---------------------------------
      000157                        500 _GRPPRT::
                                    501 ;src\msxbios.c:161: MSXUSR_LOAD_A();
      000157 7D               [ 4]  502 	ld	a,l
                                    503 ;src\msxbios.c:162: MSXUSR(0x008d);
      000158 CD 8D 00         [17]  504 	call	0x008d
                                    505 ;src\msxbios.c:163: }
      00015B C9               [10]  506 	ret
                                    507 ;src\msxbios.c:165: uint16_t GICINI() __z88dk_fastcall {
                                    508 ;	---------------------------------
                                    509 ; Function GICINI
                                    510 ; ---------------------------------
      00015C                        511 _GICINI::
                                    512 ;src\msxbios.c:166: MSXUSR(0x0090);
      00015C CD 90 00         [17]  513 	call	0x0090
                                    514 ;src\msxbios.c:167: }
      00015F C9               [10]  515 	ret
                                    516 ;src\msxbios.c:169: uint16_t WRTPSG(uint16_t reg_data) __z88dk_fastcall {
                                    517 ;	---------------------------------
                                    518 ; Function WRTPSG
                                    519 ; ---------------------------------
      000160                        520 _WRTPSG::
                                    521 ;src\msxbios.c:171: MSXUSR_LOAD_A();
      000160 7D               [ 4]  522 	ld	a,l
                                    523 ;src\msxbios.c:172: MSXUSR_LOAD_E();
      000161 5C               [ 4]  524 	ld	e,h
                                    525 ;src\msxbios.c:174: MSXUSR(0x0093);
      000162 CD 93 00         [17]  526 	call	0x0093
                                    527 ;src\msxbios.c:175: }
      000165 C9               [10]  528 	ret
                                    529 ;src\msxbios.c:177: uint8_t CHSNS() __z88dk_fastcall {
                                    530 ;	---------------------------------
                                    531 ; Function CHSNS
                                    532 ; ---------------------------------
      000166                        533 _CHSNS::
                                    534 ;src\msxbios.c:178: MSXUSR(0x009c);
      000166 CD 9C 00         [17]  535 	call	0x009c
                                    536 ;src\msxbios.c:179: MSXUSR_RTN_Z();
      000169 2E 00            [ 7]  537 	ld	l,#0
      00016B C0               [11]  538 	ret	nz
      00016C 2C               [ 4]  539 	inc	l
                                    540 ;src\msxbios.c:180: }
      00016D C9               [10]  541 	ret
                                    542 ;src\msxbios.c:182: char CHGET() __z88dk_fastcall {
                                    543 ;	---------------------------------
                                    544 ; Function CHGET
                                    545 ; ---------------------------------
      00016E                        546 _CHGET::
                                    547 ;src\msxbios.c:183: MSXUSR(0x009f);
      00016E CD 9F 00         [17]  548 	call	0x009f
                                    549 ;src\msxbios.c:184: MSXUSR_RTN_A();
      000171 6F               [ 4]  550 	ld	l,a
                                    551 ;src\msxbios.c:185: }
      000172 C9               [10]  552 	ret
                                    553 ;src\msxbios.c:187: void CHPUT(char ch) __z88dk_fastcall {
                                    554 ;	---------------------------------
                                    555 ; Function CHPUT
                                    556 ; ---------------------------------
      000173                        557 _CHPUT::
                                    558 ;src\msxbios.c:189: MSXUSR_LOAD_A();
      000173 7D               [ 4]  559 	ld	a,l
                                    560 ;src\msxbios.c:190: MSXUSR(0x00a2);
      000174 CD A2 00         [17]  561 	call	0x00a2
                                    562 ;src\msxbios.c:191: }
      000177 C9               [10]  563 	ret
                                    564 ;src\msxbios.c:193: void LPTOUT(char ch) __z88dk_fastcall {
                                    565 ;	---------------------------------
                                    566 ; Function LPTOUT
                                    567 ; ---------------------------------
      000178                        568 _LPTOUT::
                                    569 ;src\msxbios.c:195: MSXUSR_LOAD_A();
      000178 7D               [ 4]  570 	ld	a,l
                                    571 ;src\msxbios.c:196: MSXUSR(0x00a5);
      000179 CD A5 00         [17]  572 	call	0x00a5
                                    573 ;src\msxbios.c:197: }
      00017C C9               [10]  574 	ret
                                    575 ;src\msxbios.c:199: void BEEP() __z88dk_fastcall {
                                    576 ;	---------------------------------
                                    577 ; Function BEEP
                                    578 ; ---------------------------------
      00017D                        579 _BEEP::
                                    580 ;src\msxbios.c:200: MSXUSR(0x00c0);
      00017D CD C0 00         [17]  581 	call	0x00c0
                                    582 ;src\msxbios.c:201: }
      000180 C9               [10]  583 	ret
                                    584 ;src\msxbios.c:203: void CLS() __z88dk_fastcall {
                                    585 ;	---------------------------------
                                    586 ; Function CLS
                                    587 ; ---------------------------------
      000181                        588 _CLS::
                                    589 ;src\msxbios.c:204: __asm__("xor a");
      000181 AF               [ 4]  590 	xor	a
                                    591 ;src\msxbios.c:205: MSXUSR(0x00c3);
      000182 CD C3 00         [17]  592 	call	0x00c3
                                    593 ;src\msxbios.c:206: }
      000185 C9               [10]  594 	ret
                                    595 ;src\msxbios.c:208: void POSIT(uint16_t yx) __z88dk_fastcall {
                                    596 ;	---------------------------------
                                    597 ; Function POSIT
                                    598 ; ---------------------------------
      000186                        599 _POSIT::
                                    600 ;src\msxbios.c:210: MSXUSR(0x00c6);
      000186 CD C6 00         [17]  601 	call	0x00c6
                                    602 ;src\msxbios.c:211: }
      000189 C9               [10]  603 	ret
                                    604 ;src\msxbios.c:213: void TOTEXT() __z88dk_fastcall {
                                    605 ;	---------------------------------
                                    606 ; Function TOTEXT
                                    607 ; ---------------------------------
      00018A                        608 _TOTEXT::
                                    609 ;src\msxbios.c:214: MSXUSR(0x00d2);
      00018A CD D2 00         [17]  610 	call	0x00d2
                                    611 ;src\msxbios.c:215: }
      00018D C9               [10]  612 	ret
                                    613 ;src\msxbios.c:217: uint8_t GTSTCK(uint8_t index) __z88dk_fastcall {
                                    614 ;	---------------------------------
                                    615 ; Function GTSTCK
                                    616 ; ---------------------------------
      00018E                        617 _GTSTCK::
                                    618 ;src\msxbios.c:219: MSXUSR_LOAD_A();
      00018E 7D               [ 4]  619 	ld	a,l
                                    620 ;src\msxbios.c:220: MSXUSR(0x00d5);
      00018F CD D5 00         [17]  621 	call	0x00d5
                                    622 ;src\msxbios.c:221: MSXUSR_RTN_A();
      000192 6F               [ 4]  623 	ld	l,a
                                    624 ;src\msxbios.c:222: }
      000193 C9               [10]  625 	ret
                                    626 ;src\msxbios.c:224: uint8_t GTTRIG(uint8_t index) __z88dk_fastcall {
                                    627 ;	---------------------------------
                                    628 ; Function GTTRIG
                                    629 ; ---------------------------------
      000194                        630 _GTTRIG::
                                    631 ;src\msxbios.c:226: MSXUSR_LOAD_A();
      000194 7D               [ 4]  632 	ld	a,l
                                    633 ;src\msxbios.c:227: MSXUSR(0x00d8);
      000195 CD D8 00         [17]  634 	call	0x00d8
                                    635 ;src\msxbios.c:228: MSXUSR_RTN_A();
      000198 6F               [ 4]  636 	ld	l,a
                                    637 ;src\msxbios.c:229: }
      000199 C9               [10]  638 	ret
                                    639 ;src\msxbios.c:231: uint8_t GTPAD(uint8_t index) __z88dk_fastcall {
                                    640 ;	---------------------------------
                                    641 ; Function GTPAD
                                    642 ; ---------------------------------
      00019A                        643 _GTPAD::
                                    644 ;src\msxbios.c:233: MSXUSR_LOAD_A();
      00019A 7D               [ 4]  645 	ld	a,l
                                    646 ;src\msxbios.c:234: MSXUSR(0x00db);
      00019B CD DB 00         [17]  647 	call	0x00db
                                    648 ;src\msxbios.c:235: MSXUSR_RTN_A();
      00019E 6F               [ 4]  649 	ld	l,a
                                    650 ;src\msxbios.c:236: }
      00019F C9               [10]  651 	ret
                                    652 ;src\msxbios.c:238: uint8_t GTPDL(uint8_t index) __z88dk_fastcall {
                                    653 ;	---------------------------------
                                    654 ; Function GTPDL
                                    655 ; ---------------------------------
      0001A0                        656 _GTPDL::
                                    657 ;src\msxbios.c:240: MSXUSR_LOAD_A();
      0001A0 7D               [ 4]  658 	ld	a,l
                                    659 ;src\msxbios.c:241: MSXUSR(0x00de);
      0001A1 CD DE 00         [17]  660 	call	0x00de
                                    661 ;src\msxbios.c:242: MSXUSR_RTN_A();
      0001A4 6F               [ 4]  662 	ld	l,a
                                    663 ;src\msxbios.c:243: }
      0001A5 C9               [10]  664 	ret
                                    665 ;src\msxbios.c:277: void MAPXY() __z88dk_fastcall {
                                    666 ;	---------------------------------
                                    667 ; Function MAPXY
                                    668 ; ---------------------------------
      0001A6                        669 _MAPXY::
                                    670 ;src\msxbios.c:278: MSXUSR(0x0111);
      0001A6 CD 11 01         [17]  671 	call	0x0111
                                    672 ;src\msxbios.c:279: }
      0001A9 C9               [10]  673 	ret
                                    674 ;src\msxbios.c:281: uint16_t FETCHC_ADDR() __z88dk_fastcall {
                                    675 ;	---------------------------------
                                    676 ; Function FETCHC_ADDR
                                    677 ; ---------------------------------
      0001AA                        678 _FETCHC_ADDR::
                                    679 ;src\msxbios.c:282: MSXUSR(0x0114);
      0001AA CD 14 01         [17]  680 	call	0x0114
                                    681 ;src\msxbios.c:283: }
      0001AD C9               [10]  682 	ret
                                    683 ;src\msxbios.c:313: uint8_t RDVDP() __z88dk_fastcall {
                                    684 ;	---------------------------------
                                    685 ; Function RDVDP
                                    686 ; ---------------------------------
      0001AE                        687 _RDVDP::
                                    688 ;src\msxbios.c:314: MSXUSR(0x013e);
      0001AE CD 3E 01         [17]  689 	call	0x013e
                                    690 ;src\msxbios.c:315: MSXUSR_RTN_A();
      0001B1 6F               [ 4]  691 	ld	l,a
                                    692 ;src\msxbios.c:316: }
      0001B2 C9               [10]  693 	ret
                                    694 ;src\msxbios.c:318: uint8_t SNSMAT(uint8_t row) __z88dk_fastcall {
                                    695 ;	---------------------------------
                                    696 ; Function SNSMAT
                                    697 ; ---------------------------------
      0001B3                        698 _SNSMAT::
                                    699 ;src\msxbios.c:320: MSXUSR_LOAD_A();
      0001B3 7D               [ 4]  700 	ld	a,l
                                    701 ;src\msxbios.c:321: MSXUSR(0x0141);
      0001B4 CD 41 01         [17]  702 	call	0x0141
                                    703 ;src\msxbios.c:322: MSXUSR_RTN_A();
      0001B7 6F               [ 4]  704 	ld	l,a
                                    705 ;src\msxbios.c:323: }
      0001B8 C9               [10]  706 	ret
                                    707 ;src\msxbios.c:325: void KILBUF() __z88dk_fastcall {
                                    708 ;	---------------------------------
                                    709 ; Function KILBUF
                                    710 ; ---------------------------------
      0001B9                        711 _KILBUF::
                                    712 ;src\msxbios.c:326: MSXUSR(0x0156);
      0001B9 CD 56 01         [17]  713 	call	0x0156
                                    714 ;src\msxbios.c:327: }
      0001BC C9               [10]  715 	ret
                                    716 ;src\msxbios.c:330: int putchar(int ch) {
                                    717 ;	---------------------------------
                                    718 ; Function putchar
                                    719 ; ---------------------------------
      0001BD                        720 _putchar::
                                    721 ;src\msxbios.c:331: CHPUT(ch);
      0001BD FD 21 02 00      [14]  722 	ld	iy, #2
      0001C1 FD 39            [15]  723 	add	iy, sp
      0001C3 FD 6E 00         [19]  724 	ld	l, 0 (iy)
      0001C6 CDr73r01         [17]  725 	call	_CHPUT
                                    726 ;src\msxbios.c:332: if (ch == '\n') CHPUT('\r'); // convert CR to CRLF
      0001C9 FD 21 02 00      [14]  727 	ld	iy, #2
      0001CD FD 39            [15]  728 	add	iy, sp
      0001CF FD 7E 00         [19]  729 	ld	a, 0 (iy)
      0001D2 D6 0A            [ 7]  730 	sub	a, #0x0a
      0001D4 FD B6 01         [19]  731 	or	a, 1 (iy)
      0001D7 20 05            [12]  732 	jr	NZ, 00102$
      0001D9 2E 0D            [ 7]  733 	ld	l, #0x0d
      0001DB CDr73r01         [17]  734 	call	_CHPUT
      0001DE                        735 00102$:
                                    736 ;src\msxbios.c:333: return ch;
      0001DE 21 02 00         [10]  737 	ld	hl, #2
      0001E1 39               [11]  738 	add	hl, sp
      0001E2 7E               [ 7]  739 	ld	a, (hl)
      0001E3 23               [ 6]  740 	inc	hl
      0001E4 66               [ 7]  741 	ld	h, (hl)
      0001E5 6F               [ 4]  742 	ld	l, a
                                    743 ;src\msxbios.c:334: }
      0001E6 C9               [10]  744 	ret
                                    745 ;src\msxbios.c:335: char getchar() {
                                    746 ;	---------------------------------
                                    747 ; Function getchar
                                    748 ; ---------------------------------
      0001E7                        749 _getchar::
                                    750 ;src\msxbios.c:336: char ch = CHGET();
      0001E7 CDr6Er01         [17]  751 	call	_CHGET
                                    752 ;src\msxbios.c:337: putchar(ch); // echo
      0001EA 4D               [ 4]  753 	ld	c, l
      0001EB 06 00            [ 7]  754 	ld	b, #0x00
      0001ED E5               [11]  755 	push	hl
      0001EE C5               [11]  756 	push	bc
      0001EF CDrBDr01         [17]  757 	call	_putchar
      0001F2 F1               [10]  758 	pop	af
      0001F3 E1               [10]  759 	pop	hl
                                    760 ;src\msxbios.c:338: if (ch == '\r') ch = '\n';
      0001F4 7D               [ 4]  761 	ld	a, l
      0001F5 D6 0D            [ 7]  762 	sub	a, #0x0d
      0001F7 C0               [11]  763 	ret	NZ
      0001F8 2E 0A            [ 7]  764 	ld	l, #0x0a
                                    765 ;src\msxbios.c:339: return ch;
                                    766 ;src\msxbios.c:340: }
      0001FA C9               [10]  767 	ret
                                    768 	.area _CODE
                                    769 	.area _INITIALIZER
                                    770 	.area _CABS (ABS)
